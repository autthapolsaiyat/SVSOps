#!/usr/bin/env bash
set -euo pipefail

# ===== Config ‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏î‡πâ‡∏ï‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ =====
API_BASE="${API_BASE:-http://localhost:8080/api}"   # ‡∏à‡∏∞‡∏¢‡∏¥‡∏á‡∏ï‡∏£‡∏á backend
USER="${USER_NAME:-admin}"
PASS="${USER_PASS:-admin}"
TEAM_ID="${TEAM_ID:-e29e7da3-ecae-4184-a1dd-82320c918692}"

# ‡∏Ñ‡πà‡∏≤ test (‡πÅ‡∏ó‡∏ô‡πÅ‡∏ö‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏° /products/new)
SKU="${SKU:-F-TERM-001}"
NAME="${NAME:-Terminal Probe}"
UNIT="${UNIT:-EA}"
PRICE="${PRICE:-50}"

# ===== Helpers =====
say() { printf "%b\n" "$*"; }
hr()  { printf '%*s\n' "${COLUMNS:-80}" '' | tr ' ' -; }

fail() { say "‚úó $*"; exit 1; }
ok()   { say "‚úì $*"; }

jqc()  { jq -r "$1" 2>/dev/null || true; }

# ===== 0) ping backend =====
say "# API_BASE = $API_BASE"
say "# USER     = $USER"
say "# TEAM_ID  = $TEAM_ID"
hr
say "# 0) /ready"
curl -fsS "$API_BASE/ready" | jq . >/dev/null || fail "/ready ‡πÑ‡∏°‡πà‡∏ï‡∏≠‡∏ö OK"
ok "ready"

# ===== 1) Login =====
hr
say "# 1) Login"
TOKEN="$(
  curl -fsS -X POST "$API_BASE/auth/login" \
    -H 'Content-Type: application/json' \
    -d "{\"username\":\"$USER\",\"password\":\"$PASS\"}" | jq -r .access_token
)" || fail "login ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß"
[ -n "$TOKEN" ] || fail "‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ access_token"
ok "‡πÑ‡∏î‡πâ token ‡πÅ‡∏•‡πâ‡∏ß"

# ===== 2) ‡∏î‡∏∂‡∏á master (‡∏ó‡∏µ‡∏° / ‡∏Å‡∏•‡∏∏‡πà‡∏°) =====
hr
say "# 2) Masters"
say "## teams"
curl -fsS "$API_BASE/products/teams" -H "Authorization: Bearer $TOKEN" | jq .
say "## groups"
curl -fsS "$API_BASE/products/groups" -H "Authorization: Bearer $TOKEN" | jq . || true

# ===== 3) Upsert (INSERT) ‚Äî ‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏Å‡∏î‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏à‡∏≤‡∏Å‡∏ü‡∏≠‡∏£‡πå‡∏° =====
hr
say "# 3) Upsert (insert) SKU=$SKU"
UPS_RES="$(
  curl -fsS -X POST "$API_BASE/products/upsert" \
    -H "Authorization: Bearer $TOKEN" \
    -H "X-Team-Id: $TEAM_ID" \
    -H "Content-Type: application/json" \
    -d "{\"sku\":\"$SKU\",\"name\":\"$NAME\",\"unit\":\"$UNIT\",\"price_ex_vat\":$PRICE}"
)" || fail "upsert (insert) ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß"
echo "$UPS_RES" | jq .
RID="$(echo "$UPS_RES" | jq -r .id)"
[ -n "$RID" ] || fail "upsert ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ id"
ok "insert ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à (id=$RID)"

# ===== 4) GET by SKU (‡∏ï‡∏£‡∏ß‡∏à‡∏ß‡πà‡∏≤‡∏Ç‡∏∂‡πâ‡∏ô‡∏à‡∏£‡∏¥‡∏á) =====
hr
say "# 4) GET /products/get?sku=$SKU"
GET_RES="$(
  curl -fsS "$API_BASE/products/get?sku=$SKU" \
    -H "Authorization: Bearer $TOKEN"
)" || fail "get by sku ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß"
echo "$GET_RES" | jq .
GSKU="$(echo "$GET_RES" | jq -r .sku)"
[ "$GSKU" = "$SKU" ] || fail "sku ‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á ‡∏Ñ‡∏ß‡∏£‡πÄ‡∏õ‡πá‡∏ô $SKU ‡πÅ‡∏ï‡πà‡πÑ‡∏î‡πâ $GSKU"
ok "‡∏≠‡πà‡∏≤‡∏ô‡∏Ñ‡∏∑‡∏ô‡πÑ‡∏î‡πâ (sku=$GSKU)"

# ===== 5) Upsert (UPDATE) ‚Äî ‡∏à‡∏≥‡∏•‡∏≠‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏•‡πâ‡∏ß‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å =====
hr
say "# 5) Upsert (update) ‚Äî ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠"
NEW_NAME="${NEW_NAME:-$NAME (edited)}"
UPS2="$(
  curl -fsS -X POST "$API_BASE/products/upsert" \
    -H "Authorization: Bearer $TOKEN" \
    -H "X-Team-Id: $TEAM_ID" \
    -H "Content-Type: application/json" \
    -d "{\"sku\":\"$SKU\",\"name\":\"$NEW_NAME\",\"unit\":\"$UNIT\",\"price_ex_vat\":$PRICE}"
)" || fail "upsert (update) ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß"
echo "$UPS2" | jq .
ok "update ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à"

say
ok "‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô üéâ (SKU=$SKU)"

